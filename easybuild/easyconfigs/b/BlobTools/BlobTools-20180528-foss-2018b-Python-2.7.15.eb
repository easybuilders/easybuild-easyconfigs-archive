easyblock = 'CmdCp'

name = 'BlobTools'
version = '20180528'
commit = 'a14630e'
versionsuffix = '-Python-%(pyver)s'

homepage = 'https://blobtools.readme.io/docs'
description = """ A modular command-line solution for visualisation,
 quality control and taxonomic partitioning of genome datasets. """

toolchain = {'name': 'foss', 'version': '2018b'}

source_urls = [
    'https://github.com/drl/blobtools/archive/',
    'ftp://ftp.ncbi.nlm.nih.gov/pub/taxonomy/',
]
sources = [
    {
        'download_filename': '%s.tar.gz' % commit,
        'filename': SOURCE_TAR_GZ,
        'extract_cmd': "tar -xzf %s -C %(builddir)s --strip-components 1",
    },
    {'filename': 'taxdump.tar.gz', 'extract_cmd': "cp %s %(builddir)s/data/"},
]
patches = ['BlobTools-20180528_fix_deps.patch']
checksums = [
    '316c22cceec6b6ac4e3751d06ec6effb88ea35d746abb957239c75e1f4eed9a9',  # BlobTools-20180528.tar.gz
    '24399e6711ff09e27a3d457cfbf4567615e4f5b990ff15681e60248ef7852df6',  # taxdump.tar.gz
    'f26cfc74a1d90cf692a4655d251be236920feb8b0c636cd3358c4eda0c50cc82',  # BlobTools-20180528_fix_deps.patch
]

dependencies = [
    ('Python', '2.7.15'),
    ('matplotlib', '2.2.3', versionsuffix),
    ('SAMtools', '1.9'),
]

cmds_map = [('.*', './install')]

files_to_copy = ['data', 'example', 'lib', 'blobtools']

modextrapaths = {'PATH': ''}

sanity_check_commands = ['blobtools -h']

sanity_check_paths = {
    'files': ['blobtools', 'data/nodesDB.txt'],
    'dirs': [],
}

moduleclass = 'bio'
