# Contribution from the Crick HPC team
# uploaded by J. Sassmannshausen

easyblock = 'CMakeMake'

name = 'VirtualGL'
version = '2.6.1'

homepage = 'https://virtualgl.org/'
description = """VirtualGL is an open source toolkit that gives any Linux or 
Unix remote display software the ability to run OpenGL applications with full 
hardware acceleration. Some remote display software cannot be used with OpenGL 
applications at all. Other remote display software forces OpenGL applications 
to use a slow, software-only renderer, to the detriment of performance as well 
as compatibility. The traditional method of displaying OpenGL applications to 
an X server on a different machine (indirect rendering) supports hardware 
acceleration, but this approach requires that all of the OpenGL commands and 
3D data be sent over the network to be rendered. That is not a tenable 
proposition unless the 3D data is relatively small and static, unless the 
network is very fast, and unless the OpenGL application is specifically tuned 
for a remote X-Windows environment."""

toolchain = {'name': 'foss', 'version': '2018b'}

source_urls = ['https://github.com/VirtualGL/virtualgl/archive/']
sources = ['%(version)s.tar.gz']
checksums = ['38d1d32efe97adaea6754f4559520454d4f0d2400964ebc59f8ac01f0146e23f']

dependencies = [
     ('libjpeg-turbo', '2.0.0'),
     ('Mesa', '18.1.1'),
     ('libGLU', '9.0.0'),
]
builddependencies = [('CMake', '3.12.1')]

binaries = [
    'cpustat', 'glreadtest', 'glxinfo', 'glxspheres64', 'nettest', 'tcbench', 
    'vglclient', 'vglconfig', 'vglconnect', 'vglgenkey', 'vgllogin', 'vglrun', 
    'vglserver_config'
]


sanity_check_paths = {
    'files': ['bin/%s' % x for x in binaries],
    'dirs': ['lib64', 'share', 'include'],
}

moduleclass = 'vis'
