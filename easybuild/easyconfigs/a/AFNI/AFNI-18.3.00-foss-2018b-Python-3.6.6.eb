easyblock = 'ConfigureMake'

name = 'AFNI'
version = '18.3.00'
versionsuffix = '-Python-%(pyver)s'

homepage = 'http://afni.nimh.nih.gov/'
description = """AFNI is a set of C programs for processing, analyzing, and displaying functional MRI (FMRI) data -
 a technique for mapping human brain activity."""

toolchain = {'name': 'foss', 'version': '2018b'}
toolchainopts = {'openmp': True, 'pic': True}

# detailed release notes are available at http://afni.nimh.nih.gov/pub/dist/doc/misc/history/afni_hist_level1_all.html
# afni_src.tgz tends to be updated in place (without changing the timestamp?!)
source_urls = ['https://github.com/afni/afni/archive/']
sources = ['AFNI_%(version)s.tar.gz']

dependencies = [
    ('tcsh', '6.20.00'),
    ('Python', '3.6.6'),
    ('X11', '20180604'),
    ('motif', '2.3.8'),
    ('R', '3.5.1'),
    ('PyQt5', '5.11.3', versionsuffix),
    ('expat', '2.2.5'),
    ('libpng', '1.6.34'),
    ('libjpeg-turbo', '2.0.0'),
    ('GSL', '2.5'),
    ('GLib', '2.54.3'),  # must match version used in Qt5 (via PyQt5)
    ('zlib', '1.2.11'),
]

skipsteps = ['configure', 'install']

prebuildopts = "cd src && cp Makefile.linux_openmp_64 Makefile && "
buildopts = 'totality LGIFTI="$EBROOTEXPAT/lib/libexpat.a" LDPYTHON="-lpython%(pyshortver)sm" '
buildopts += 'CC="${CC} ${CFLAGS} -fPIC -DREAD_WRITE_64 -DLINUX2 \$(CEXTRA)" '
buildopts += 'CCVOL="${CC} ${CFLAGS} -fPIC -DREAD_WRITE_64 -DLINUX2 \$(CEXTRA)" '
buildopts += 'CCFAST="${CC} ${CFLAGS} -fPIC -DREAD_WRITE_64 -DLINUX2 \$(CEXTRA)" '
buildopts += 'CCOLD="${CC} ${CFLAGS} -fPIC -DREAD_WRITE_64 -DLINUX2 \$(CEXTRA)" '
buildopts += 'CCMIN="${CC} ${CFLAGS} -fPIC -DREAD_WRITE_64 -DLINUX2 \$(CEXTRA)" '
buildopts += 'CCSVD="${CC} ${CFLAGS} -fPIC -DREAD_WRITE_64 -DLINUX2 \$(CEXTRA)" '
buildopts += 'LD="${CC} \$(CPROF)" LZLIB="${EBROOTZLIB}/lib/libz.a" XLIBS="-lXm -lXt" '
buildopts += 'IFLAGS="-I. -I$EBROOTPYTHON/include/python%(pyshortver)sm '
buildopts += '-I$EBROOTGLIB/lib/glib-2.0/include -I$EBROOTGLIB/include/glib-2.0"'
buildopts += ' INSTALLDIR=%(installdir)s'

parallel = 1

modextrapaths = {'PATH': ['']}

sanity_check_paths = {
    'files': ['afni'],
    'dirs': [],
}

moduleclass = 'bio'
